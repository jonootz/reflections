What happens when you initialize a repository? Why do you need to do it?
NOTES:
-git init
-git status
-git add
-git commit
-git diff
-git log

How is the staging area different from the working directory and the repository? What value do you think it offers?

How can you use the staging area to make sure you have one commit per logical change?
NOTES:
-git diff repoID1 repoID2 # in repo
-git diff # working vs staged
-git diff --staged # staged vs repo
-git reset --hard # discards changes in working copy and staging BE CAREFUL, cannot get changes back

Branches
NOTES:
-"last commit" is aka "Tip"
-git branch
-git branch [new branch name here]

What are some situations when branches would be helpful in keeping your history organized? How would branches help?

NOTES:
-git log --graph --oneline master coins #to visualize branch differences
-With detached Head stateyou can commit exp changes without affecting a branch (example: git checkout 3e42...).  to create new branch with this unreachable commit: 
git checkout -b [new_branch_name]
which is the same as running both:
git branch [new_branch_name]
git checkout [new_branch_name]

How do the diagrams help you visualize the branch structure?